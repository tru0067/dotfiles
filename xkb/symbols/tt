default partial alphanumeric_keys modifier_keys
xkb_symbols "modded" {

    name[Group1]= "English (TT)";

    key <TLDE> { [         grave, asciitilde    ] };
    key <AE01> { [             1, exclam        ] };
    key <AE02> { [             2, at            ] };
    key <AE03> { [             3, numbersign    ] };
    key <AE04> { [             4, dollar        ] };
    key <AE05> { [             5, percent       ] };
    key <AE06> { [             6, asciicircum   ] };
    key <AE07> { [             7, ampersand     ] };
    key <AE08> { [             8, asterisk      ] };
    key <AE09> { [             9, parenleft     ] };
    key <AE10> { [             0, parenright    ] };
    key <AE11> { [         minus, underscore    ] };
    key <AE12> { [         equal, plus          ] };
    key <BKSP> { [     BackSpace                ], type[Group1] = "ONE_LEVEL" };

    key <TAB>  { [           Tab                ], type[Group1] = "ONE_LEVEL" };
    key <AD01> { [             q, Q             ] };
    key <AD02> { [             w, W             ] };
    key <AD03> { [             e, E,                     U03F5, Greek_EPSILON,      NoSymbol, NoSymbol,      Greek_epsilon, NoSymbol      ], type[Group1] = "EIGHT_LEVEL" };
    key <AD04> { [             r, R,                 Greek_rho, Greek_RHO     ] };
    key <AD05> { [             t, T,                 Greek_tau, Greek_TAU     ] };
    key <AD06> { [             y, Y,             Greek_upsilon, Greek_UPSILON ] };
    key <AD07> { [             u, U,               Greek_theta, Greek_THETA   ] };
    key <AD08> { [             i, I,                Greek_iota, Greek_IOTA    ] };
    key <AD09> { [             o, O,             Greek_omicron, Greek_OMICRON ] };
    key <AD10> { [             p, P,                  Greek_pi, Greek_PI      ] };
    key <AD11> { [   bracketleft, braceleft     ] };
    key <AD12> { [  bracketright, braceright    ] };
    key <BKSL> { [     backslash, bar           ] };

    key <CAPS> { [     Control_L                ], type[Group1] = "ONE_LEVEL" };
    key <AC01> { [             a, A,               Greek_alpha, Greek_ALPHA   ] };
    key <AC02> { [             s, S,               Greek_sigma, Greek_SIGMA,        NoSymbol, NoSymbol, Greek_finalsmallsigma, NoSymbol   ], type[Group1] = "EIGHT_LEVEL" };
    key <AC03> { [             d, D,               Greek_delta, Greek_DELTA   ] };
    key <AC04> { [             f, F,                     U03D5, Greek_PHI,          NoSymbol, NoSymbol,          Greek_phi, NoSymbol      ], type[Group1] = "EIGHT_LEVEL" };
    key <AC05> { [             g, G,               Greek_gamma, Greek_GAMMA   ] };
    key <AC06> { [             h, H,                 Greek_eta, Greek_ETA     ] };
    key <AC07> { [             j, J,                  Greek_xi, Greek_XI      ] };
    key <AC08> { [             k, K,               Greek_kappa, Greek_KAPPA   ] };
    key <AC09> { [             l, L,               Greek_lamda, Greek_LAMDA   ] };
    key <AC10> { [     semicolon, colon         ] };
    key <AC11> { [    apostrophe, quotedbl      ] };
    key <RTRN> { [        Return                ], type[Group1] = "ONE_LEVEL" };

    key <LFSH> { [       Shift_L                ], type[Group1] = "ONE_LEVEL" };
    key <AB01> { [             z, Z,                Greek_zeta, Greek_ZETA    ] };
    key <AB02> { [             x, X,                 Greek_chi, Greek_CHI     ] };
    key <AB03> { [             c, C,                 Greek_psi, Greek_PSI     ] };
    key <AB04> { [             v, V,               Greek_omega, Greek_OMEGA   ] };
    key <AB05> { [             b, B,                Greek_beta, Greek_BETA    ] };
    key <AB06> { [             n, N,                  Greek_nu, Greek_NU      ] };
    key <AB07> { [             m, M,                  Greek_mu, Greek_MU      ] };
    key <AB08> { [         comma, less          ] };
    key <AB09> { [        period, greater       ] };
    key <AB10> { [         slash, question      ] };
    key <RTSH> { [  ISO_Level3_Shift            ], type[Group1] = "ONE_LEVEL" };

    key <ESC>  { [     Caps_Lock                ], type[Group1] = "ONE_LEVEL" };
    key <DELE> { [        Delete                ], type[Group1] = "ONE_LEVEL" };

    key <LCTL> { [        Escape                ], type[Group1] = "ONE_LEVEL" };
    key <LWIN> { [         Alt_L, Meta_L        ], type[Group1] = "TWO_LEVEL" };
    key <LALT> { [       Super_L                ], type[Group1] = "ONE_LEVEL" };
    key <RALT> { [  ISO_Level5_Shift            ], type[Group1] = "ONE_LEVEL" };
    key <MENU> { [  ISO_Level5_Shift            ], type[Group1] = "ONE_LEVEL" };

    include "level3(modifier_mapping)"
    include "level5(modifier_mapping)"
};
